type count = int;
type arr = array[100] of int;
type arr_2d = array[50][50] of int;

int function get_num(base:int, total:count)
begin
    begin
	var num:int := 0;
        var i:int;
        num := (num + count) - num * count;
        return num;
    end;
end;

/* Dummy function that does does random stuff with 2d array */
arr_2d function fill(A:int, m:int, n:int, base:int)
begin
    begin
    	var ret:arr_2d := 0;
        var sum:int := 0;
       	for i := 1 to m do
       		for j := 1 to n do
       			if (A[i][j] = 0) then
       				ret[j+1][i+1] := base;
       			else 
       				ret[i][j] := base; 
                    sum := ret[i+1][j+1*5] + ret[i*j][j];
       			endif;
       		enddo;
       	enddo;
        return ret;
    end;
    begin
    	break; /* useless block */
    end;
end;

void main()
begin
    begin
        var count : int;
        var a : arr;
        var sum, index : int := 0;
        var fp : fixedpt;
        var foo : arr_2d;
        
        /* bugged */
        /* foo := fill(5); */
        /*count := readi();*/
        count := 10;
        if ((count < 0) | (count > 100))
        then
            printi(0);
        else
            for i := 1 to count do
                /*a[i] := get_num(i, count);*/
                a[i] := 5;
            enddo;
            while (i < count) do
                sum := sum + a[index] * i; /* test precedence */
                index := index + 1;
            enddo;
            fp := 1.5 + sum;
            printf(fp);
        endif;
    end;
end;
