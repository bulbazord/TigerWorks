type ArrayInt = array [10] of int; /* Declare ArrayInt as a new type */
type ArrayFxp = array [10] of fixedpt;

int function abs(x:int) begin
	begin
		if x = 0 then return x;
		else
			begin
				if x > 0 then return x; else begin return 0 - x; end; endif;
			end;
		endif;
	end;
end;

int function fib(n:int) begin
	begin
		n := abs(n);
		if n <= 1 then return n;
		else
			begin
				var r : int;

				var q : int;
				r := fib(n-1);

				q := fib(n-2);
				
				r := r + q;
				return r;
			end;
		endif;
	end;
end;

void function bubblesort(A:ArrayFxp, itemCount:int) begin
	begin
		var hasChanged:int := 1;
		var index:int;
		while hasChanged <> 0 do
			hasChanged := 0;
			itemCount := itemCount - 1;
			for index := 1 to itemCount do
				if A[index] > A[index + 1] then
					begin
						var tmp:fixedpt;

	tmp := A[index];
						A[index] := A[index+1];
						A[index+1] := tmp;
						hasChanged := 1;
					end;
				endif;
			enddo;
		enddo;
	end;
end;

fixedpt function unimodal_peak_search(A:ArrayFxp, lo:int, hi:int) begin
	begin
		var mid: int; 

		var a: int;

		mid := (high+low)/2;
		if A[mid-1] < A[mid] & A[mid] > A[mid+1] then
			return mid;
		endif;
		if A[mid-1] < A[mid] & A[mid] < A[mid+1] then

		a := unimodal_peak_search(A,mid,hi);
			return a;
		endif;

		a :=unimodal_peak_search(A,lo,mid);

		if A[mid-1] > A[mid] & A[mid] > A[mid+1] then
			return a;
		endif;
		/* If execution reaches this point then the array is not unimodal with a maximum. */
		/* Lack of a return statement here should be a semantic error. */
		return 999.999;
	end;
end;


void main() begin
	begin
		var arr, arr2 : ArrayFxp;

		var i:int;

		var tmp:fixedpt;

		var x:int := 1;

		var sum:int := 0;

		arr[0] := 14.59;  arr2[0] := 14.59;
		arr[9] := 27.51;  arr2[9] := 27.51;
		arr[1] := 45.3;   arr2[1] := 45.3;
		arr[8] := 73.61;  arr2[8] := 73.61;
		arr[2] := 131.26; arr2[2] := 131.26;
		arr[7] := 232.05; arr2[7] := 232.05;
		arr[3] := 242.96; arr2[3] := 242.96;
		arr[6] := 243.99; arr2[6] := 243.99;
		arr[4] := 257.36; arr2[4] := 257.36;
		arr[5] := 314.2;  arr2[5] := 314.2;

		for i := 0 to 9 do
			printf(arr[i]);
		enddo;

		tmp := unimodal_peak_search(arr,0,10);

		printf(tmp);

		bubblesort(arr);

		for i := 0 to 9 do
			printf(arr[i]);
		enddo;
	
		tmp := 	unimodal_peak_search(arr,0,10);

printf(tmp); /* should be the error sentinel, -999.999 */

		while x < 14 do
			printi(fib(x));
		enddo;

		for i := 0 to 9 do
			sum := sum + arr[i]*arr2[i];
			if 0 > 1 then break; endif;
			printi(sum);
		enddo;

	end;
end;

